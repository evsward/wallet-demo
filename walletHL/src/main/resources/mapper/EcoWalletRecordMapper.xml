<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ecochain.wallet.mapper.EcoWalletRecordMapper">
  <resultMap id="BaseResultMap" type="com.ecochain.wallet.entity.EcoWalletRecord">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="userName" jdbcType="VARCHAR" property="userName" />
    <result column="parities" jdbcType="VARCHAR" property="parities" />
    <result column="rmb" jdbcType="DECIMAL" property="rmb" />
    <result column="btc" jdbcType="DECIMAL" property="btc" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="type" jdbcType="VARCHAR" property="type" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, userName, parities, rmb, btc, createTime, type
  </sql>
  <select id="selectByExample" parameterType="com.ecochain.wallet.entity.EcoWalletRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_wallet_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_wallet_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_wallet_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ecochain.wallet.entity.EcoWalletRecordExample">
    delete from t_wallet_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.ecochain.wallet.entity.EcoWalletRecord" useGeneratedKeys="true">
    insert into t_wallet_record (userName, parities, rmb, 
      btc, createTime, type
      )
    values (#{userName,jdbcType=VARCHAR}, #{parities,jdbcType=VARCHAR}, #{rmb,jdbcType=DECIMAL}, 
      #{btc,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP}, #{type,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.ecochain.wallet.entity.EcoWalletRecord" useGeneratedKeys="true">
    insert into t_wallet_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userName != null">
        userName,
      </if>
      <if test="parities != null">
        parities,
      </if>
      <if test="rmb != null">
        rmb,
      </if>
      <if test="btc != null">
        btc,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="type != null">
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="parities != null">
        #{parities,jdbcType=VARCHAR},
      </if>
      <if test="rmb != null">
        #{rmb,jdbcType=DECIMAL},
      </if>
      <if test="btc != null">
        #{btc,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ecochain.wallet.entity.EcoWalletRecordExample" resultType="java.lang.Long">
    select count(*) from t_wallet_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_wallet_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null">
        userName = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.parities != null">
        parities = #{record.parities,jdbcType=VARCHAR},
      </if>
      <if test="record.rmb != null">
        rmb = #{record.rmb,jdbcType=DECIMAL},
      </if>
      <if test="record.btc != null">
        btc = #{record.btc,jdbcType=DECIMAL},
      </if>
      <if test="record.createTime != null">
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_wallet_record
    set id = #{record.id,jdbcType=INTEGER},
      userName = #{record.userName,jdbcType=VARCHAR},
      parities = #{record.parities,jdbcType=VARCHAR},
      rmb = #{record.rmb,jdbcType=DECIMAL},
      btc = #{record.btc,jdbcType=DECIMAL},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      type = #{record.type,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ecochain.wallet.entity.EcoWalletRecord">
    update t_wallet_record
    <set>
      <if test="userName != null">
        userName = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="parities != null">
        parities = #{parities,jdbcType=VARCHAR},
      </if>
      <if test="rmb != null">
        rmb = #{rmb,jdbcType=DECIMAL},
      </if>
      <if test="btc != null">
        btc = #{btc,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ecochain.wallet.entity.EcoWalletRecord">
    update t_wallet_record
    set userName = #{userName,jdbcType=VARCHAR},
      parities = #{parities,jdbcType=VARCHAR},
      rmb = #{rmb,jdbcType=DECIMAL},
      btc = #{btc,jdbcType=DECIMAL},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      type = #{type,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>