<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ecochain.wallet.mapper.IcoGatherRecordMapper">
  <resultMap id="BaseResultMap" type="com.ecochain.wallet.entity.IcoGatherRecord">
      <id column="id" property="id"  jdbcType="VARCHAR"/>
      <result column="user_id" property="userId"  jdbcType="VARCHAR"/>
      <result column="amount" property="amount"  jdbcType="DECIMAL"/>
      <result column="cost" property="cost"  jdbcType="DECIMAL"/>
      <result column="gather_status" property="gatherStatus"  jdbcType="VARCHAR"/>
      <result column="currency" property="currency"  jdbcType="VARCHAR"/>
      <result column="hash" property="hash"  jdbcType="VARCHAR"/>
      <result column="nonce" property="nonce"  jdbcType="VARCHAR"/>
      <result column="block_hash" property="blockHash"  jdbcType="VARCHAR"/>
      <result column="block_number" property="blockNumber"  jdbcType="VARCHAR"/>
      <result column="transaction_index" property="transactionIndex"  jdbcType="VARCHAR"/>
      <result column="from_address" property="fromAddress"  jdbcType="VARCHAR"/>
      <result column="to_address" property="toAddress"  jdbcType="VARCHAR"/>
      <result column="value" property="value"  jdbcType="VARCHAR"/>
      <result column="gas_price" property="gasPrice"  jdbcType="VARCHAR"/>
      <result column="gas" property="gas"  jdbcType="VARCHAR"/>
      <result column="input" property="input"  jdbcType="VARCHAR"/>
      <result column="creates" property="creates" jdbcType="VARCHAR"/>
      <result column="public_key" property="publicKey" jdbcType="VARCHAR"/>
      <result column="order_no" property="orderNo" jdbcType="VARCHAR"/>
      <result column="create_time" property="createTime"  jdbcType="TIMESTAMP"/>
      <result column="update_time" property="updateTime"  jdbcType="TIMESTAMP"/>
      <result column="remark" property="remark" jdbcType="VARCHAR"/>
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, user_id, amount, cost, gather_status, currency, order_no, 
  	hash, from_address, to_address, nonce, block_hash, block_number, transaction_index, value, 
  	gas_price, gas, input, creates, public_key, create_time, update_time, remark
  </sql>
  
  <insert id="insert" parameterType="com.ecochain.wallet.entity.IcoGatherRecord">
  	insert into ico_gather_record (id, user_id, amount, cost, gather_status, currency, order_no, 
  	hash, from_address, to_address, nonce, block_hash, block_number, transaction_index, value, 
  	gas_price, gas, input, creates, public_key, create_time, update_time, remark)
    values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{amount,jdbcType=DECIMAL}, 
    		#{cost,jdbcType=DECIMAL}, #{gatherStatus,jdbcType=VARCHAR}, #{currency,jdbcType=VARCHAR}, 
    		#{hash,jdbcType=VARCHAR}, #{nonce,jdbcType=VARCHAR}, #{blockHash,jdbcType=VARCHAR}, 
    		#{blockNumber,jdbcType=VARCHAR}, #{transactionIndex,jdbcType=VARCHAR}, 
    		#{fromAddress,jdbcType=VARCHAR}, #{toAddress,jdbcType=VARCHAR}, #{value,jdbcType=VARCHAR},
    		#{gasPrice,jdbcType=VARCHAR},#{gas,jdbcType=VARCHAR},#{input,jdbcType=VARCHAR}, 
    		#{creates,jdbcType=VARCHAR},#{publicKey,jdbcType=VARCHAR},#{orderNo,jdbcType=VARCHAR}, 
    		#{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR})
  </insert>
  
  <select id="listGatherRecord" resultMap="BaseResultMap">
  	select
  		<include refid="Base_Column_List"/>
    from
    	ico_gather_record
    where
    	currency ='ETH'
    and
    	gather_status != 1
  </select>
  
  <update id="updateGatherStatusRecordByID" parameterType="com.ecochain.wallet.entity.IcoGatherRecord">
  	update
  		ico_gather_record
  	set
  		gather_status = #{gatherStatus}
  	where
  		id = #{id}
  </update>

  <select id="getGetherRecordByOrderNO" parameterType="java.lang.String" resultMap="BaseResultMap">
  	select
  		<include refid="Base_Column_List"/>
    from
    	ico_gather_record
    where
    	currency ='ETH'
    and
    	order_no = #{orderNo}	
  </select>
  
  <delete id="delGatherRecordByID" parameterType="java.lang.String">
    delete from 
    	ico_gather_record
    where
    	id = #{id}
  </delete>
  
</mapper>